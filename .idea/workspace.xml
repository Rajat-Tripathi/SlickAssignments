<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="07e0413e-6afb-4dc9-9527-7ca5752d77ec" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" afterPath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" />
    </list>
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="MockRepository.scala" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="343">
              <caret line="43" column="143" lean-forward="false" selection-start-line="43" selection-start-column="143" selection-end-line="43" selection-end-column="143" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VehicleServiceTestSpec.scala" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="139">
              <caret line="23" column="57" lean-forward="false" selection-start-line="23" selection-start-column="57" selection-end-line="23" selection-end-column="57" />
              <folding>
                <element signature="e#30#56#0" expanded="true" />
                <element signature="e#2200#2797#0" expanded="false" />
                <element signature="e#2868#3463#0" expanded="false" />
                <element signature="e#3539#4130#0" expanded="false" />
                <element signature="e#4203#4805#0" expanded="false" />
                <element signature="e#4883#5485#0" expanded="false" />
                <element signature="e#5566#6178#0" expanded="false" />
                <element signature="e#6281#6607#0" expanded="false" />
                <element signature="e#6678#6927#0" expanded="false" />
                <element signature="e#7009#7265#0" expanded="false" />
                <element signature="e#8122#8734#0" expanded="false" />
                <element signature="e#8823#9440#0" expanded="false" />
                <element signature="e#9507#10124#0" expanded="false" />
                <element signature="e#10196#10813#0" expanded="false" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VehicleApi.scala" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="418">
              <caret line="82" column="131" lean-forward="false" selection-start-line="82" selection-start-column="131" selection-end-line="82" selection-end-column="131" />
              <folding>
                <element signature="e#30#73#0" expanded="true" />
                <element signature="e#299#2116#0" expanded="false" />
                <element signature="e#2121#2722#0" expanded="false" />
                <element signature="e#2727#3349#0" expanded="false" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Kartik &lt;ksdeshamukh@gmail.com&gt;" />
        <option value="KartikSD &lt;ksdeshamukh@gmail.com&gt;" />
      </list>
    </option>
    <option name="UPDATE_TYPE" value="MERGE" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseRepository.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleTypeApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="676" />
    <option name="width" value="697" />
    <option name="height" value="735" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
              <item name="feature" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="feature" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
      <pane id="AndroidView" />
      <pane id="Scratches" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.VehicleServiceTestSpec">
    <configuration name="CountryServiceTestSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.CountryServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleCategoryServiceTestSpec.Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleCategoryServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleCategoryServiceTestSpec.Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleCategoryServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleServiceTestSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleTypeServiceTestSpec.Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleTypeServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <list size="5">
      <item index="0" class="java.lang.String" itemvalue="ScalaTest.CountryServiceTestSpec" />
      <item index="1" class="java.lang.String" itemvalue="ScalaTest.VehicleCategoryServiceTestSpec.Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list" />
      <item index="2" class="java.lang.String" itemvalue="ScalaTest.VehicleCategoryServiceTestSpec.Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" />
      <item index="3" class="java.lang.String" itemvalue="ScalaTest.VehicleTypeServiceTestSpec.Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" />
      <item index="4" class="java.lang.String" itemvalue="ScalaTest.VehicleServiceTestSpec" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="ScalaTest.VehicleServiceTestSpec" />
        <item index="1" class="java.lang.String" itemvalue="ScalaTest.VehicleTypeServiceTestSpec.Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" />
        <item index="2" class="java.lang.String" itemvalue="ScalaTest.VehicleCategoryServiceTestSpec.Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" />
        <item index="3" class="java.lang.String" itemvalue="ScalaTest.VehicleCategoryServiceTestSpec.Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list" />
        <item index="4" class="java.lang.String" itemvalue="ScalaTest.CountryServiceTestSpec" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="07e0413e-6afb-4dc9-9527-7ca5752d77ec" name="Default" comment="" />
      <created>1510425806611</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1510425806611</updated>
    </task>
    <task id="LOCAL-00001" summary="test">
      <created>1510426700164</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1510426700164</updated>
    </task>
    <task id="LOCAL-00002" summary="test cases updated">
      <created>1510430645211</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1510430645211</updated>
    </task>
    <task id="LOCAL-00003" summary="test cases updated">
      <created>1510430747415</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1510430747415</updated>
    </task>
    <task id="LOCAL-00004" summary="test cases updated">
      <created>1510472006203</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1510472006203</updated>
    </task>
    <task id="LOCAL-00005" summary="test cases updated">
      <created>1510491806339</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1510491806339</updated>
    </task>
    <task id="LOCAL-00006" summary="test cases updated">
      <created>1510546232869</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1510546232869</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="CompanyServiceTestSpec - 2017.11.12 at 14h 36m 06s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec - 2017.11.12 at 16h 20m 26s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec - 2017.11.12 at 18h 32m 21s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec_Company_Service_should_throw_exception_for_insert_company_if_duplicate_country_is_inserted - 2017.11.12 at 14h 36m 00s.xml">
      <configuration name="CompanyServiceTestSpec.Company Service should throw exception for insert company if duplicate country is inserted" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec_Company_Service_should_throw_exception_in_update_company_for_duplicate_company_details - 2017.11.12 at 16h 20m 13s.xml">
      <configuration name="CompanyServiceTestSpec.Company Service should throw exception in update company for duplicate company details" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryServiceTestSpec - 2017.11.12 at 14h 05m 26s.xml">
      <configuration name="CountryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryServiceTestSpec - 2017.11.12 at 15h 41m 13s.xml">
      <configuration name="CountryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryServiceTestSpec - 2017.11.12 at 18h 32m 44s.xml">
      <configuration name="CountryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleServiceTestSpec - 2017.11.13 at 10h 32m 51s.xml">
      <configuration name="VehicleServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleServiceTestSpec - 2017.11.13 at 10h 33m 37s.xml">
      <configuration name="VehicleServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="744" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="SBT" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.42105263" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.21875" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.13086233" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="sbt-shell-toolwindow" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <MESSAGE value="test" />
    <MESSAGE value="test cases updated" />
    <option name="LAST_COMMIT_MESSAGE" value="test cases updated" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/.idea/workspace.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseFacade.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="22" column="31" lean-forward="true" selection-start-line="22" selection-start-column="31" selection-end-line="22" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="18" column="10" lean-forward="false" selection-start-line="18" selection-start-column="10" selection-end-line="18" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="329">
          <caret line="69" column="49" lean-forward="false" selection-start-line="69" selection-start-column="49" selection-end-line="69" selection-end-column="49" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="66" column="11" lean-forward="false" selection-start-line="66" selection-start-column="11" selection-end-line="66" selection-end-column="11" />
          <folding>
            <element signature="e#76#119#0" expanded="true" />
            <element signature="e#300#1619#0" expanded="false" />
            <element signature="e#1624#2210#0" expanded="false" />
            <element signature="e#2215#3154#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-32">
          <caret line="37" column="77" lean-forward="true" selection-start-line="37" selection-start-column="77" selection-end-line="37" selection-end-column="77" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#531#898#0" expanded="false" />
            <element signature="e#960#1268#0" expanded="false" />
            <element signature="e#1336#1629#0" expanded="false" />
            <element signature="e#2309#2698#0" expanded="false" />
            <element signature="e#3289#3826#0" expanded="false" />
            <element signature="e#3902#4351#0" expanded="false" />
            <element signature="e#4438#4872#0" expanded="false" />
            <element signature="e#4958#5418#0" expanded="false" />
            <element signature="e#6125#6529#0" expanded="false" />
            <element signature="e#6597#7008#0" expanded="false" />
            <element signature="e#7079#7475#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="14" column="24" lean-forward="false" selection-start-line="14" selection-start-column="24" selection-end-line="14" selection-end-column="24" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#501#796#0" expanded="false" />
            <element signature="e#862#1107#0" expanded="false" />
            <element signature="e#1173#1425#0" expanded="false" />
            <element signature="e#1517#2052#0" expanded="false" />
            <element signature="e#2137#2588#0" expanded="false" />
            <element signature="e#2661#3122#0" expanded="false" />
            <element signature="e#3195#3646#0" expanded="false" />
            <element signature="e#3726#4186#0" expanded="false" />
            <element signature="e#4300#4742#0" expanded="false" />
            <element signature="e#4811#5174#0" expanded="false" />
            <element signature="e#5240#5610#0" expanded="false" />
            <element signature="e#5687#6068#0" expanded="false" />
            <element signature="e#6170#6729#0" expanded="false" />
            <element signature="e#6814#7280#0" expanded="false" />
            <element signature="e#7346#7819#0" expanded="false" />
            <element signature="e#7892#8365#0" expanded="false" />
            <element signature="e#8441#8916#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="14" column="26" lean-forward="false" selection-start-line="14" selection-start-column="26" selection-end-line="14" selection-end-column="26" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#483#778#0" expanded="false" />
            <element signature="e#841#1093#0" expanded="false" />
            <element signature="e#1166#1411#0" expanded="false" />
            <element signature="e#1495#1894#0" expanded="false" />
            <element signature="e#1982#2297#0" expanded="false" />
            <element signature="e#2370#2704#0" expanded="false" />
            <element signature="e#3428#3758#0" expanded="false" />
            <element signature="e#3823#4164#0" expanded="false" />
            <element signature="e#4240#4574#0" expanded="false" />
            <element signature="e#4654#5003#0" expanded="false" />
            <element signature="e#5116#5557#0" expanded="false" />
            <element signature="e#5627#5989#0" expanded="false" />
            <element signature="e#6056#6425#0" expanded="false" />
            <element signature="e#6508#6888#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="42" column="58" lean-forward="false" selection-start-line="42" selection-start-column="58" selection-end-line="42" selection-end-column="58" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#296#1175#0" expanded="false" />
            <element signature="e#1180#1893#0" expanded="false" />
            <element signature="e#1898#2988#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleTypeApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="405">
          <caret line="72" column="0" lean-forward="false" selection-start-line="72" selection-start-column="0" selection-end-line="72" selection-end-column="0" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#288#1636#0" expanded="false" />
            <element signature="e#1641#2300#0" expanded="false" />
            <element signature="e#2305#3315#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="60">
          <caret line="4" column="29" lean-forward="true" selection-start-line="2" selection-start-column="0" selection-end-line="4" selection-end-column="29" />
          <folding>
            <element signature="e#496#827#0" expanded="false" />
            <element signature="e#898#1167#0" expanded="false" />
            <element signature="e#1235#1515#0" expanded="false" />
            <element signature="e#1603#2193#0" expanded="false" />
            <element signature="e#2267#2770#0" expanded="false" />
            <element signature="e#2844#3347#0" expanded="false" />
            <element signature="e#3416#3904#0" expanded="false" />
            <element signature="e#3979#4485#0" expanded="false" />
            <element signature="e#5148#5539#0" expanded="false" />
            <element signature="e#5617#6019#0" expanded="false" />
            <element signature="e#6093#6506#0" expanded="false" />
            <element signature="e#7302#7813#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build.sbt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="343">
          <caret line="43" column="143" lean-forward="false" selection-start-line="43" selection-start-column="143" selection-end-line="43" selection-end-column="143" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="418">
          <caret line="82" column="131" lean-forward="false" selection-start-line="82" selection-start-column="131" selection-end-line="82" selection-end-column="131" />
          <folding>
            <element signature="e#30#73#0" expanded="true" />
            <element signature="e#299#2116#0" expanded="false" />
            <element signature="e#2121#2722#0" expanded="false" />
            <element signature="e#2727#3349#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="139">
          <caret line="23" column="57" lean-forward="false" selection-start-line="23" selection-start-column="57" selection-end-line="23" selection-end-column="57" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#2200#2797#0" expanded="false" />
            <element signature="e#2868#3463#0" expanded="false" />
            <element signature="e#3539#4130#0" expanded="false" />
            <element signature="e#4203#4805#0" expanded="false" />
            <element signature="e#4883#5485#0" expanded="false" />
            <element signature="e#5566#6178#0" expanded="false" />
            <element signature="e#6281#6607#0" expanded="false" />
            <element signature="e#6678#6927#0" expanded="false" />
            <element signature="e#7009#7265#0" expanded="false" />
            <element signature="e#8122#8734#0" expanded="false" />
            <element signature="e#8823#9440#0" expanded="false" />
            <element signature="e#9507#10124#0" expanded="false" />
            <element signature="e#10196#10813#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>