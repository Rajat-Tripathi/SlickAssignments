<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="07e0413e-6afb-4dc9-9527-7ca5752d77ec" name="Default" comment="">
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala" afterPath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala" afterPath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyRestTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyRestTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryRestTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryRestTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryRestTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryRestTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala" />
    </list>
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="SlickAssignments" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="MockRepository.scala" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="194">
              <caret line="28" column="7" lean-forward="false" selection-start-line="28" selection-start-column="7" selection-end-line="28" selection-end-column="7" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VehicleServiceTestSpec.scala" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="90">
              <caret line="14" column="22" lean-forward="true" selection-start-line="14" selection-start-column="22" selection-end-line="14" selection-end-column="22" />
              <folding>
                <element signature="e#2890#3487#0" expanded="false" />
                <element signature="e#3558#4153#0" expanded="false" />
                <element signature="e#4229#4820#0" expanded="false" />
                <element signature="e#4893#5495#0" expanded="false" />
                <element signature="e#5573#6175#0" expanded="false" />
                <element signature="e#6256#6868#0" expanded="false" />
                <element signature="e#7397#7646#0" expanded="false" />
                <element signature="e#7728#7984#0" expanded="false" />
                <element signature="e#8870#9482#0" expanded="false" />
                <element signature="e#9571#10188#0" expanded="false" />
                <element signature="e#10255#10872#0" expanded="false" />
                <element signature="e#10944#11561#0" expanded="false" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Kartik &lt;ksdeshamukh@gmail.com&gt;" />
        <option value="KartikSD &lt;ksdeshamukh@gmail.com&gt;" />
      </list>
    </option>
    <option name="UPDATE_TYPE" value="MERGE" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseRepository.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomSerializers.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/ApiBoot.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomExceptions.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomDirectives.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleTypeApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="676" />
    <option name="width" value="697" />
    <option name="height" value="735" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource ProjectPane="false" />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scratches" />
      <pane id="PackagesPane" />
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
              <item name="core" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
              <item name="feature" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="feature" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="settings.editor.selected.configurable" value="preferences.editor" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.VehicleServiceTestSpec.Vehicle Service should return all vehicle list&#10;Vehicle Service should throw exception in get all for empty vehicle list&#10;Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number">
    <configuration name="CompanyServiceTestSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.CompanyServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="CompanyServiceTestSpec.Company Service should return all company list&#10;Company Service should throw exception in get all fo rempty company list&#10;Company Service should return a company in get company for company id as 1&#10;Company Service should throw exception in get company for empty company list&#10;Company Service should throw exception in get company by id for company id 5&#10;Company Service should insert company  to list in insert company&#10;Company Service should throw exception in insert company if name and licence number not defined&#10;Company Service should throw exception in insert company if country does not exists&#10;Company Service should throw exception for insert company if country list is empty&#10;Company Service should throw exception for insert company if duplicate country is inserted&#10;Company Service should delete company in delete company for company id as 3&#10;Company Service should throw exception in delete company for empty company list&#10;Company Service should throw exception in delete company for company id as 5&#10;Company Service should throw exception in delete company if foreign key relation exists&#10;Company Service should update company by id for company id as 1&#10;Company Service should throw exception in update company if name and licence number not defined&#10;Company Service should throw exception in update company for company id as 5&#10;Company Service should throw exception in update company if country does not exists&#10;Company Service should throw exception in update company for duplicate company details" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.CompanyServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Company Service should return all company list&#10;Company Service should throw exception in get all fo rempty company list&#10;Company Service should return a company in get company for company id as 1&#10;Company Service should throw exception in get company for empty company list&#10;Company Service should throw exception in get company by id for company id 5&#10;Company Service should insert company  to list in insert company&#10;Company Service should throw exception in insert company if name and licence number not defined&#10;Company Service should throw exception in insert company if country does not exists&#10;Company Service should throw exception for insert company if country list is empty&#10;Company Service should throw exception for insert company if duplicate country is inserted&#10;Company Service should delete company in delete company for company id as 3&#10;Company Service should throw exception in delete company for empty company list&#10;Company Service should throw exception in delete company for company id as 5&#10;Company Service should throw exception in delete company if foreign key relation exists&#10;Company Service should update company by id for company id as 1&#10;Company Service should throw exception in update company if name and licence number not defined&#10;Company Service should throw exception in update company for company id as 5&#10;Company Service should throw exception in update company if country does not exists&#10;Company Service should throw exception in update company for duplicate company details" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleCategoryServiceTestSpec.Vehicle Category Service should return all category list&#10;Vehicle Category Service should throw exception in get all for empty category list&#10;Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is duplicated&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleCategoryServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Category Service should return all category list&#10;Vehicle Category Service should throw exception in get all for empty category list&#10;Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is duplicated&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleServiceTestSpec.Vehicle Service should return all vehicle list&#10;Vehicle Service should throw exception in get all for empty vehicle list&#10;Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Service should return all vehicle list&#10;Vehicle Service should throw exception in get all for empty vehicle list&#10;Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleTypeServiceTestSpec.Vehicle Type Service should return all vehicle type list&#10;Vehicle Type Service should throw exception in get all for empty vehicle type list&#10;Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleTypeServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Type Service should return all vehicle type list&#10;Vehicle Type Service should throw exception in get all for empty vehicle type list&#10;Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <list size="5">
      <item index="0" class="java.lang.String" itemvalue="ScalaTest.CompanyServiceTestSpec" />
      <item index="1" class="java.lang.String" itemvalue="ScalaTest.CompanyServiceTestSpec.Company Service should return all company list&#10;Company Service should throw exception in get all fo rempty company list&#10;Company Service should return a company in get company for company id as 1&#10;Company Service should throw exception in get company for empty company list&#10;Company Service should throw exception in get company by id for company id 5&#10;Company Service should insert company  to list in insert company&#10;Company Service should throw exception in insert company if name and licence number not defined&#10;Company Service should throw exception in insert company if country does not exists&#10;Company Service should throw exception for insert company if country list is empty&#10;Company Service should throw exception for insert company if duplicate country is inserted&#10;Company Service should delete company in delete company for company id as 3&#10;Company Service should throw exception in delete company for empty company list&#10;Company Service should throw exception in delete company for company id as 5&#10;Company Service should throw exception in delete company if foreign key relation exists&#10;Company Service should update company by id for company id as 1&#10;Company Service should throw exception in update company if name and licence number not defined&#10;Company Service should throw exception in update company for company id as 5&#10;Company Service should throw exception in update company if country does not exists&#10;Company Service should throw exception in update company for duplicate company details" />
      <item index="2" class="java.lang.String" itemvalue="ScalaTest.VehicleCategoryServiceTestSpec.Vehicle Category Service should return all category list&#10;Vehicle Category Service should throw exception in get all for empty category list&#10;Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is duplicated&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" />
      <item index="3" class="java.lang.String" itemvalue="ScalaTest.VehicleTypeServiceTestSpec.Vehicle Type Service should return all vehicle type list&#10;Vehicle Type Service should throw exception in get all for empty vehicle type list&#10;Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" />
      <item index="4" class="java.lang.String" itemvalue="ScalaTest.VehicleServiceTestSpec.Vehicle Service should return all vehicle list&#10;Vehicle Service should throw exception in get all for empty vehicle list&#10;Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="ScalaTest.VehicleServiceTestSpec.Vehicle Service should return all vehicle list&#10;Vehicle Service should throw exception in get all for empty vehicle list&#10;Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" />
        <item index="1" class="java.lang.String" itemvalue="ScalaTest.VehicleTypeServiceTestSpec.Vehicle Type Service should return all vehicle type list&#10;Vehicle Type Service should throw exception in get all for empty vehicle type list&#10;Vehicle Type Service should get a vehicle type for type id as 1&#10;Vehicle Type Service should throw exception in get type id for empty vehicle type list&#10;Vehicle Type Service should throw exception in get type id for vehicle type id as 8&#10;Vehicle Type Service should insert a new vehicle type&#10;Vehicle Type Service should throw exception in insert vehicle type if name is not defined&#10;Vehicle Type Service should throw exception in insert type if category id does not exists&#10;Vehicle Type Service should throw exception in insert type if category list is empty&#10;Vehicle Type Service should throw exception in insert type if vehicle type already defined&#10;Vehicle Type Service should delete vehicle type for vehicle type id as 5&#10;Vehicle Type Service should throw exception in delete type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in delete type if vehicle type id does not exists&#10;Vehicle Type Service should throw exception in delete type if foreign key relation exists&#10;Vehicle Type Service should update the vehicle type details&#10;Vehicle Type Service should throw exception in update vehicle type if vehicle type list is empty&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle type id as 10&#10;Vehicle Type Service should throw exception in update vehicle type for vehicle category id as 4&#10;Vehicle Type Service should throw exception in update vehicle type if fields are not defined" />
        <item index="2" class="java.lang.String" itemvalue="ScalaTest.VehicleCategoryServiceTestSpec.Vehicle Category Service should return all category list&#10;Vehicle Category Service should throw exception in get all for empty category list&#10;Vehicle Category Service should return vehicle category in get category by id for id as 1&#10;Vehicle Category Service should throw exception in get category by id for id as 5&#10;Vehicle Category Service should throw exception in get category for empty category list&#10;Vehicle Category Service should insert vehicle into vehicle category table&#10;Vehicle Category Service should throw exception in insert category if category name is undefined&#10;Vehicle Category Service should throw exception in insert category if category name is duplicated&#10;Vehicle Category Service should delete vehicle category for category id as 3&#10;Vehicle Category Service should throw exception in delete vehicle category for category id as 4&#10;Vehicle Category Service should throw exception in delete vehicle category for empty vehicle category list&#10;Vehicle Category Service should throw exception in delete vehicle category if foreign key relation exists&#10;Vehicle Category Service should update the vehicle category for category id as 1&#10;Vehicle Category Service should throw exception in update category if name is undefined&#10;Vehicle Category Service should throw exception in update category for category id as 5&#10;Vehicle Category Service should throw exception in update category for empty category list" />
        <item index="3" class="java.lang.String" itemvalue="ScalaTest.CompanyServiceTestSpec" />
        <item index="4" class="java.lang.String" itemvalue="ScalaTest.CompanyServiceTestSpec.Company Service should return all company list&#10;Company Service should throw exception in get all fo rempty company list&#10;Company Service should return a company in get company for company id as 1&#10;Company Service should throw exception in get company for empty company list&#10;Company Service should throw exception in get company by id for company id 5&#10;Company Service should insert company  to list in insert company&#10;Company Service should throw exception in insert company if name and licence number not defined&#10;Company Service should throw exception in insert company if country does not exists&#10;Company Service should throw exception for insert company if country list is empty&#10;Company Service should throw exception for insert company if duplicate country is inserted&#10;Company Service should delete company in delete company for company id as 3&#10;Company Service should throw exception in delete company for empty company list&#10;Company Service should throw exception in delete company for company id as 5&#10;Company Service should throw exception in delete company if foreign key relation exists&#10;Company Service should update company by id for company id as 1&#10;Company Service should throw exception in update company if name and licence number not defined&#10;Company Service should throw exception in update company for company id as 5&#10;Company Service should throw exception in update company if country does not exists&#10;Company Service should throw exception in update company for duplicate company details" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="07e0413e-6afb-4dc9-9527-7ca5752d77ec" name="Default" comment="" />
      <created>1510425806611</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1510425806611</updated>
    </task>
    <task id="LOCAL-00001" summary="test">
      <created>1510426700164</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1510426700164</updated>
    </task>
    <task id="LOCAL-00002" summary="test cases updated">
      <created>1510430645211</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1510430645211</updated>
    </task>
    <task id="LOCAL-00003" summary="test cases updated">
      <created>1510430747415</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1510430747415</updated>
    </task>
    <task id="LOCAL-00004" summary="test cases updated">
      <created>1510472006203</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1510472006203</updated>
    </task>
    <task id="LOCAL-00005" summary="test cases updated">
      <created>1510491806339</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1510491806339</updated>
    </task>
    <task id="LOCAL-00006" summary="test cases updated">
      <created>1510546232869</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1510546232869</updated>
    </task>
    <task id="LOCAL-00007" summary="test cases updated">
      <created>1510549426073</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1510549426073</updated>
    </task>
    <task id="LOCAL-00008" summary="test cases updated">
      <created>1510569658170</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1510569658170</updated>
    </task>
    <task id="LOCAL-00009" summary="test cases updated">
      <created>1510570908080</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1510570908080</updated>
    </task>
    <task id="LOCAL-00010" summary="test cases updated">
      <created>1510572675507</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1510572675507</updated>
    </task>
    <task id="LOCAL-00011" summary="test cases updated">
      <created>1510575476182</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1510575476182</updated>
    </task>
    <task id="LOCAL-00012" summary="test cases updated">
      <created>1510579379687</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1510579379687</updated>
    </task>
    <task id="LOCAL-00013" summary="test cases updated">
      <created>1510581560269</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1510581560269</updated>
    </task>
    <task id="LOCAL-00014" summary="test cases  for rest updated">
      <created>1510587398835</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1510587398835</updated>
    </task>
    <task id="LOCAL-00015" summary="test cases  for rest updated">
      <created>1510588943310</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1510588943310</updated>
    </task>
    <option name="localTasksCounter" value="16" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="CompanyServiceTestSpec - 2017.11.14 at 09h 19m 02s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec - 2017.11.14 at 09h 39m 11s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec - 2017.11.14 at 09h 39m 58s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryRestTestSpec_Country_Rest_should_throw_exception_for_update_country_for_name_and_language_not_defined - 2017.11.14 at 08h 27m 11s.xml">
      <configuration name="CountryRestTestSpec.Country Rest should throw exception for update country for name and language not defined" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryServiceTestSpec - 2017.11.14 at 08h 25m 17s.xml">
      <configuration name="CountryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryServiceTestSpec - 2017.11.14 at 08h 26m 47s.xml">
      <configuration name="CountryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleCategoryServiceTestSpec - 2017.11.13 at 17h 47m 49s.xml">
      <configuration name="VehicleCategoryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleRestRestSpec - 2017.11.13 at 21h 04m 03s.xml">
      <configuration name="VehicleRestRestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleRestRestSpec - 2017.11.13 at 21h 05m 32s.xml">
      <configuration name="VehicleRestRestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleTypeRestTestSpec_Vehicle_Type_Rest_should_get_all_vehicle_types - 2017.11.13 at 18h 52m 27s.xml">
      <configuration name="VehicleTypeRestTestSpec.Vehicle Type Rest should get all vehicle types" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="744" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="SBT" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.19062027" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.5263158" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.21875" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.1172466" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="sbt-shell-toolwindow" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.39967105" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <MESSAGE value="test" />
    <MESSAGE value="test cases updated" />
    <MESSAGE value="test cases  for rest updated" />
    <option name="LAST_COMMIT_MESSAGE" value="test cases  for rest updated" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="40" column="0" lean-forward="false" selection-start-line="40" selection-start-column="0" selection-end-line="40" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="930">
          <caret line="70" column="172" lean-forward="false" selection-start-line="70" selection-start-column="172" selection-end-line="70" selection-end-column="172" />
          <folding>
            <element signature="e#30#68#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2310">
          <caret line="165" column="0" lean-forward="false" selection-start-line="165" selection-start-column="0" selection-end-line="165" selection-end-column="0" />
          <folding>
            <element signature="e#76#119#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="14" column="23" lean-forward="false" selection-start-line="14" selection-start-column="23" selection-end-line="14" selection-end-column="23" />
          <folding>
            <element signature="e#30#56#0" expanded="false" />
            <element signature="e#2890#3487#0" expanded="false" />
            <element signature="e#3558#4153#0" expanded="false" />
            <element signature="e#4229#4820#0" expanded="false" />
            <element signature="e#4893#5495#0" expanded="false" />
            <element signature="e#5573#6175#0" expanded="false" />
            <element signature="e#6256#6868#0" expanded="false" />
            <element signature="e#7397#7646#0" expanded="false" />
            <element signature="e#7728#7984#0" expanded="false" />
            <element signature="e#8870#9482#0" expanded="false" />
            <element signature="e#9571#10188#0" expanded="false" />
            <element signature="e#10255#10872#0" expanded="false" />
            <element signature="e#10944#11561#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="900">
          <caret line="68" column="48" lean-forward="true" selection-start-line="68" selection-start-column="48" selection-end-line="68" selection-end-column="48" />
          <folding>
            <element signature="e#30#70#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/workspace.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build.sbt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomSerializers.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="135">
          <caret line="11" column="0" lean-forward="true" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/srcs/akka-http-core_2.12-10.0.10-sources.jar!/akka/http/scaladsl/model/StatusCode.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="135" column="6" lean-forward="false" selection-start-line="135" selection-start-column="6" selection-end-line="135" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/BaseEntities.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="8" column="11" lean-forward="false" selection-start-line="8" selection-start-column="11" selection-end-line="8" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/com.typesafe.akka/akka-http_2.12/srcs/akka-http_2.12-10.0.10-sources.jar!/akka/http/scaladsl/server/directives/PathDirectives.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="22" column="22" lean-forward="true" selection-start-line="22" selection-start-column="22" selection-end-line="22" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockFacades.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="75">
          <caret line="7" column="6" lean-forward="false" selection-start-line="7" selection-start-column="6" selection-end-line="7" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseFacade.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="22" column="35" lean-forward="true" selection-start-line="22" selection-start-column="35" selection-end-line="22" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/ApiBoot.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="20" column="45" lean-forward="false" selection-start-line="20" selection-start-column="45" selection-end-line="20" selection-end-column="45" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="104">
          <caret line="14" column="11" lean-forward="false" selection-start-line="14" selection-start-column="11" selection-end-line="14" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/com.typesafe.akka/akka-http_2.12/srcs/akka-http_2.12-10.0.10-sources.jar!/akka/http/scaladsl/server/directives/MethodDirectives.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="32" column="6" lean-forward="false" selection-start-line="32" selection-start-column="6" selection-end-line="32" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomExceptions.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="72">
          <caret line="27" column="7" lean-forward="false" selection-start-line="27" selection-start-column="7" selection-end-line="27" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="20" column="27" lean-forward="true" selection-start-line="20" selection-start-column="27" selection-end-line="20" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2310">
          <caret line="165" column="0" lean-forward="false" selection-start-line="165" selection-start-column="0" selection-end-line="165" selection-end-column="0" />
          <folding>
            <element signature="e#76#119#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1275">
          <caret line="141" column="32" lean-forward="false" selection-start-line="141" selection-start-column="32" selection-end-line="141" selection-end-column="32" />
          <folding>
            <element signature="e#30#73#0" expanded="true" />
            <element signature="e#675#939#0" expanded="false" />
            <element signature="e#999#1305#0" expanded="false" />
            <element signature="e#1347#1610#0" expanded="false" />
            <element signature="e#1680#1934#0" expanded="false" />
            <element signature="e#2007#2242#0" expanded="false" />
            <element signature="e#2277#2758#0" expanded="false" />
            <element signature="e#3711#4192#0" expanded="false" />
            <element signature="e#4747#5198#0" expanded="false" />
            <element signature="e#5656#6158#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="13">
          <caret line="70" column="172" lean-forward="false" selection-start-line="70" selection-start-column="172" selection-end-line="70" selection-end-column="172" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-183">
          <caret line="60" column="7" lean-forward="false" selection-start-line="60" selection-start-column="7" selection-end-line="60" selection-end-column="7" />
          <folding>
            <element signature="e#30#70#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleTypeApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="313">
          <caret line="89" column="167" lean-forward="true" selection-start-line="89" selection-start-column="167" selection-end-line="89" selection-end-column="167" />
          <folding>
            <element signature="e#76#116#0" expanded="false" />
            <element signature="e#369#1917#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="27">
          <caret line="13" column="10" lean-forward="false" selection-start-line="13" selection-start-column="10" selection-end-line="13" selection-end-column="10" />
          <folding>
            <element signature="e#30#70#0" expanded="true" />
            <element signature="e#377#1413#0" expanded="false" />
            <element signature="e#1418#2225#0" expanded="false" />
            <element signature="e#2230#3497#0" expanded="false" />
            <element signature="e#3502#4627#0" expanded="false" />
            <element signature="e#4632#5055#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1498">
          <caret line="135" column="64" lean-forward="true" selection-start-line="135" selection-start-column="64" selection-end-line="135" selection-end-column="64" />
          <folding>
            <element signature="e#76#119#0" expanded="true" />
            <element signature="e#720#1041#0" expanded="false" />
            <element signature="e#1107#1462#0" expanded="false" />
            <element signature="e#2670#3250#0" expanded="false" />
            <element signature="e#5803#6226#0" expanded="false" />
            <element signature="e#6125#6218#0" expanded="false" />
            <element signature="e#6750#7329#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="14" column="16" lean-forward="false" selection-start-line="14" selection-start-column="0" selection-end-line="14" selection-end-column="22" />
          <folding>
            <element signature="e#76#114#0" expanded="true" />
            <element signature="e#380#1817#0" expanded="false" />
            <element signature="e#1822#2488#0" expanded="false" />
            <element signature="e#2493#3606#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomDirectives.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="223">
          <caret line="48" column="7" lean-forward="false" selection-start-line="48" selection-start-column="7" selection-end-line="48" selection-end-column="7" />
          <folding>
            <element signature="e#73#106#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="19" column="22" lean-forward="false" selection-start-line="19" selection-start-column="22" selection-end-line="19" selection-end-column="22" />
          <folding>
            <element signature="e#672#936#0" expanded="false" />
            <element signature="e#998#1304#0" expanded="false" />
            <element signature="e#1352#1615#0" expanded="false" />
            <element signature="e#1681#1989#0" expanded="false" />
            <element signature="e#2040#2348#0" expanded="false" />
            <element signature="e#3045#3689#0" expanded="false" />
            <element signature="e#3774#4230#0" expanded="false" />
            <element signature="e#4303#4772#0" expanded="false" />
            <element signature="e#4852#5317#0" expanded="false" />
            <element signature="e#5365#5847#0" expanded="false" />
            <element signature="e#7233#7850#0" expanded="false" />
            <element signature="e#7894#8453#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="23" column="38" lean-forward="false" selection-start-line="23" selection-start-column="38" selection-end-line="23" selection-end-column="38" />
          <folding>
            <element signature="e#76#102#0" expanded="true" />
            <element signature="e#1522#1767#0" expanded="false" />
            <element signature="e#1833#2085#0" expanded="false" />
            <element signature="e#2838#3289#0" expanded="false" />
            <element signature="e#3362#3823#0" expanded="false" />
            <element signature="e#3896#4347#0" expanded="false" />
            <element signature="e#4427#4887#0" expanded="false" />
            <element signature="e#5541#5904#0" expanded="false" />
            <element signature="e#5970#6340#0" expanded="false" />
            <element signature="e#6417#6798#0" expanded="false" />
            <element signature="e#6900#7488#0" expanded="false" />
            <element signature="e#7573#8039#0" expanded="false" />
            <element signature="e#8105#8578#0" expanded="false" />
            <element signature="e#8651#9124#0" expanded="false" />
            <element signature="e#9200#9675#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="24" column="20" lean-forward="true" selection-start-line="24" selection-start-column="20" selection-end-line="24" selection-end-column="20" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#1141#1436#0" expanded="false" />
            <element signature="e#1499#1751#0" expanded="false" />
            <element signature="e#2670#2985#0" expanded="false" />
            <element signature="e#3058#3392#0" expanded="false" />
            <element signature="e#4537#4878#0" expanded="false" />
            <element signature="e#4954#5288#0" expanded="false" />
            <element signature="e#5368#5717#0" expanded="false" />
            <element signature="e#6370#6732#0" expanded="false" />
            <element signature="e#6799#7168#0" expanded="false" />
            <element signature="e#7251#7631#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="14" column="34" lean-forward="false" selection-start-line="14" selection-start-column="34" selection-end-line="14" selection-end-column="34" />
          <folding>
            <element signature="e#1288#1655#0" expanded="false" />
            <element signature="e#1717#2025#0" expanded="false" />
            <element signature="e#2093#2386#0" expanded="false" />
            <element signature="e#2495#3028#0" expanded="false" />
            <element signature="e#3572#3971#0" expanded="false" />
            <element signature="e#4085#4660#0" expanded="false" />
            <element signature="e#4736#5185#0" expanded="false" />
            <element signature="e#5272#5706#0" expanded="false" />
            <element signature="e#5792#6252#0" expanded="false" />
            <element signature="e#6370#6929#0" expanded="false" />
            <element signature="e#6997#7401#0" expanded="false" />
            <element signature="e#7469#7880#0" expanded="false" />
            <element signature="e#7951#8347#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="21" column="7" lean-forward="true" selection-start-line="21" selection-start-column="7" selection-end-line="21" selection-end-column="7" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#1216#1547#0" expanded="false" />
            <element signature="e#1618#1887#0" expanded="false" />
            <element signature="e#1955#2235#0" expanded="false" />
            <element signature="e#3022#3525#0" expanded="false" />
            <element signature="e#3599#4102#0" expanded="false" />
            <element signature="e#4171#4659#0" expanded="false" />
            <element signature="e#4734#5240#0" expanded="false" />
            <element signature="e#6882#7295#0" expanded="false" />
            <element signature="e#8125#8636#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="28" column="7" lean-forward="false" selection-start-line="28" selection-start-column="7" selection-end-line="28" selection-end-column="7" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="14" column="22" lean-forward="true" selection-start-line="14" selection-start-column="22" selection-end-line="14" selection-end-column="22" />
          <folding>
            <element signature="e#2890#3487#0" expanded="false" />
            <element signature="e#3558#4153#0" expanded="false" />
            <element signature="e#4229#4820#0" expanded="false" />
            <element signature="e#4893#5495#0" expanded="false" />
            <element signature="e#5573#6175#0" expanded="false" />
            <element signature="e#6256#6868#0" expanded="false" />
            <element signature="e#7397#7646#0" expanded="false" />
            <element signature="e#7728#7984#0" expanded="false" />
            <element signature="e#8870#9482#0" expanded="false" />
            <element signature="e#9571#10188#0" expanded="false" />
            <element signature="e#10255#10872#0" expanded="false" />
            <element signature="e#10944#11561#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>