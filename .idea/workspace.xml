<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="07e0413e-6afb-4dc9-9527-7ca5752d77ec" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" afterPath="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" afterPath="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" />
    </list>
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="SlickAssignments" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileEditorManager">
    <leaf>
      <file leaf-file-name="MockRepository.scala" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="239">
              <caret line="40" column="0" lean-forward="true" selection-start-line="40" selection-start-column="0" selection-end-line="40" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VehicleApi.scala" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="195">
              <caret line="70" column="172" lean-forward="false" selection-start-line="70" selection-start-column="172" selection-end-line="70" selection-end-column="172" />
              <folding>
                <element signature="e#30#68#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VehicleRestRestSpec.scala" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="2445">
              <caret line="165" column="0" lean-forward="false" selection-start-line="165" selection-start-column="0" selection-end-line="165" selection-end-column="0" />
              <folding>
                <element signature="e#76#119#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="VehicleServiceTestSpec.scala" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="180">
              <caret line="14" column="23" lean-forward="true" selection-start-line="14" selection-start-column="23" selection-end-line="14" selection-end-column="23" />
              <folding>
                <element signature="e#30#56#0" expanded="true" />
                <element signature="e#2230#2827#0" expanded="false" />
                <element signature="e#2898#3493#0" expanded="false" />
                <element signature="e#3569#4160#0" expanded="false" />
                <element signature="e#4233#4835#0" expanded="false" />
                <element signature="e#4913#5515#0" expanded="false" />
                <element signature="e#5596#6208#0" expanded="false" />
                <element signature="e#6737#6986#0" expanded="false" />
                <element signature="e#7068#7324#0" expanded="false" />
                <element signature="e#8210#8822#0" expanded="false" />
                <element signature="e#8911#9528#0" expanded="false" />
                <element signature="e#9595#10212#0" expanded="false" />
                <element signature="e#10284#10901#0" expanded="false" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Kartik &lt;ksdeshamukh@gmail.com&gt;" />
        <option value="KartikSD &lt;ksdeshamukh@gmail.com&gt;" />
      </list>
    </option>
    <option name="UPDATE_TYPE" value="MERGE" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseRepository.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomSerializers.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/ApiBoot.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomExceptions.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomDirectives.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleTypeApi.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeRestTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="676" />
    <option name="width" value="697" />
    <option name="height" value="735" />
  </component>
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource ProjectPane="false" />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
              <item name="core" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="reactore" type="462c0819:PsiDirectoryNode" />
              <item name="feature" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="SlickAssignments" type="b2602c69:ProjectViewProjectNode" />
              <item name="SlickAssignments" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="feature" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
      <pane id="AndroidView" />
      <pane id="Scratches" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.VehicleServiceTestSpec.Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number">
    <configuration name="VehicleRestRestSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleRestRestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="" />
      <setting name="testKind" value="Class" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleRestRestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleRestRestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Rest should delete vehicle in delete vehicle for id 1&#10;Vehicle Rest should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Rest should throw exception in delete vehicle if vehicle id not found for id as 6" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleRestRestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Rest should delete vehicle in delete vehicle for id 1&#10;Vehicle Rest should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Rest should throw exception in delete vehicle if vehicle id not found for id as 6" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration name="VehicleServiceTestSpec.Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="slickassignments" />
      <setting name="path" value="com.reactore.feature.VehicleServiceTestSpec" />
      <setting name="package" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="testName" value="Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" />
      <setting name="testKind" value="Test name" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <classRegexps />
      <testRegexps />
      <envs />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
    </configuration>
    <list size="5">
      <item index="0" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list" />
      <item index="1" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted" />
      <item index="2" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Rest should delete vehicle in delete vehicle for id 1&#10;Vehicle Rest should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Rest should throw exception in delete vehicle if vehicle id not found for id as 6" />
      <item index="3" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec" />
      <item index="4" class="java.lang.String" itemvalue="ScalaTest.VehicleServiceTestSpec.Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" />
    </list>
    <recent_temporary>
      <list size="5">
        <item index="0" class="java.lang.String" itemvalue="ScalaTest.VehicleServiceTestSpec.Vehicle Service should get vehicle in get by id for vehicle id as 1&#10;Vehicle Service should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Service should throw exception in get vehicle for  empty vehicle list&#10;Vehicle Service should insert a new vehicle&#10;Vehicle Service should throw exception in insert vehicle if fields are not defined&#10;Vehicle Service should throw exception in insert vehicle if company list is empty&#10;Vehicle Service should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Service should throw exception in insert vehicle if company does not exists&#10;Vehicle Service should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Service should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Service should delete vehicle in delete vehicle for id 1&#10;Vehicle Service should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Service should throw exception in delete vehicle if vehicle id not found for id as 6&#10;Vehicle Service should update vehicle details&#10;Vehicle Service should throw exception in update vehicle if fields are not defined&#10;Vehicle Service should throw exception in update vehicle if vehicle id does not exists for id as 5&#10;Vehicle Service should throw exception in update vehicle for company id as 5&#10;Vehicle Service should throw exception in update vehicle for vehicle type id as 6&#10;Vehicle Service should throw exception in update vehicle if vehicle has duplicate model number" />
        <item index="1" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec" />
        <item index="2" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted&#10;Vehicle Rest should delete vehicle in delete vehicle for id 1&#10;Vehicle Rest should throw exception in delete vehicle if vehicle list is empty&#10;Vehicle Rest should throw exception in delete vehicle if vehicle id not found for id as 6" />
        <item index="3" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list&#10;Vehicle Rest should insert a new vehicle&#10;Vehicle Rest should throw exception in insert vehicle if fields are not defined&#10;Vehicle Rest should throw exception in insert vehicle if company list is empty&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type list is empty&#10;Vehicle Rest should throw exception in insert vehicle if company does not exists&#10;Vehicle Rest should throw exception in insert vehicle if vehicle type does not exists&#10;Vehicle Rest should throw exception in insert vehicle if duplicate model number inserted" />
        <item index="4" class="java.lang.String" itemvalue="ScalaTest.VehicleRestRestSpec.Vehicle Rest should get all vehicles&#10;Vehicle Rest should throw exception for get all for empty vehicle list&#10;Vehicle Rest should get vehicle in get by id for vehicle id as 1&#10;Vehicle Rest should throw exception in get vehicle for vehicle id as 5&#10;Vehicle Rest should throw exception in get vehicle for empty vehicle list" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="07e0413e-6afb-4dc9-9527-7ca5752d77ec" name="Default" comment="" />
      <created>1510425806611</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1510425806611</updated>
    </task>
    <task id="LOCAL-00001" summary="test">
      <created>1510426700164</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1510426700164</updated>
    </task>
    <task id="LOCAL-00002" summary="test cases updated">
      <created>1510430645211</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1510430645211</updated>
    </task>
    <task id="LOCAL-00003" summary="test cases updated">
      <created>1510430747415</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1510430747415</updated>
    </task>
    <task id="LOCAL-00004" summary="test cases updated">
      <created>1510472006203</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1510472006203</updated>
    </task>
    <task id="LOCAL-00005" summary="test cases updated">
      <created>1510491806339</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1510491806339</updated>
    </task>
    <task id="LOCAL-00006" summary="test cases updated">
      <created>1510546232869</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1510546232869</updated>
    </task>
    <task id="LOCAL-00007" summary="test cases updated">
      <created>1510549426073</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1510549426073</updated>
    </task>
    <task id="LOCAL-00008" summary="test cases updated">
      <created>1510569658170</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1510569658170</updated>
    </task>
    <task id="LOCAL-00009" summary="test cases updated">
      <created>1510570908080</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1510570908080</updated>
    </task>
    <task id="LOCAL-00010" summary="test cases updated">
      <created>1510572675507</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1510572675507</updated>
    </task>
    <task id="LOCAL-00011" summary="test cases updated">
      <created>1510575476182</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1510575476182</updated>
    </task>
    <task id="LOCAL-00012" summary="test cases updated">
      <created>1510579379687</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1510579379687</updated>
    </task>
    <task id="LOCAL-00013" summary="test cases updated">
      <created>1510581560269</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1510581560269</updated>
    </task>
    <option name="localTasksCounter" value="14" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="CompanyRestTestSpec_Company_Rest_should_delete_company_for_company_id_as_3 - 2017.11.13 at 15h 53m 11s.xml">
      <configuration name="CompanyRestTestSpec.Company Rest should delete company for company id as 3" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyRestTestSpec_Company_Rest_should_throw_exception_if_country_list_is_empty - 2017.11.13 at 15h 48m 13s.xml">
      <configuration name="CompanyRestTestSpec.Company Rest should throw exception if country list is empty" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyRestTestSpec_Company_Rest_should_throw_exception_if_country_list_is_empty - 2017.11.13 at 15h 53m 03s.xml">
      <configuration name="CompanyRestTestSpec.Company Rest should throw exception if country list is empty" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyRestTestSpec_Company_Rest_should_throw_exception_in_delete_route_for_empty_company_list - 2017.11.13 at 15h 55m 13s.xml">
      <configuration name="CompanyRestTestSpec.Company Rest should throw exception in delete route for empty company list" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CompanyServiceTestSpec - 2017.11.13 at 16h 30m 46s.xml">
      <configuration name="CompanyServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="CountryRestTestSpec_Country_Rest_should_return_list_of_countries - 2017.11.13 at 16h 21m 25s.xml">
      <configuration name="CountryRestTestSpec.Country Rest should return list of countries" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleCategoryServiceTestSpec - 2017.11.13 at 17h 47m 49s.xml">
      <configuration name="VehicleCategoryServiceTestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleRestRestSpec - 2017.11.13 at 21h 04m 03s.xml">
      <configuration name="VehicleRestRestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleRestRestSpec - 2017.11.13 at 21h 05m 32s.xml">
      <configuration name="VehicleRestRestSpec" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="VehicleTypeRestTestSpec_Vehicle_Type_Rest_should_get_all_vehicle_types - 2017.11.13 at 18h 52m 27s.xml">
      <configuration name="VehicleTypeRestTestSpec.Vehicle Type Rest should get all vehicle types" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="744" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="SBT" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.19062027" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32894737" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.31743422" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.21875" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.1301059" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="sbt-shell-toolwindow" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.39967105" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="-1" side_tool="true" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
    </layout>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="RECENTLY_FILTERED_USER_GROUPS">
                <collection />
              </option>
              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
                <collection />
              </option>
              <option name="COLUMN_ORDER">
                <list>
                  <option value="0" />
                  <option value="1" />
                  <option value="2" />
                  <option value="3" />
                </list>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <MESSAGE value="test" />
    <MESSAGE value="test cases updated" />
    <option name="LAST_COMMIT_MESSAGE" value="test cases updated" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/.idea/workspace.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/build.sbt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomSerializers.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="135">
          <caret line="11" column="0" lean-forward="true" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
          <folding>
            <element signature="e#73#115#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/srcs/akka-http-core_2.12-10.0.10-sources.jar!/akka/http/scaladsl/model/StatusCode.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="135" column="6" lean-forward="false" selection-start-line="135" selection-start-column="6" selection-end-line="135" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/BaseEntities.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="8" column="11" lean-forward="false" selection-start-line="8" selection-start-column="11" selection-end-line="8" selection-end-column="11" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/com.typesafe.akka/akka-http_2.12/srcs/akka-http_2.12-10.0.10-sources.jar!/akka/http/scaladsl/server/directives/PathDirectives.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="22" column="22" lean-forward="true" selection-start-line="22" selection-start-column="22" selection-end-line="22" selection-end-column="22" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockFacades.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="75">
          <caret line="7" column="6" lean-forward="false" selection-start-line="7" selection-start-column="6" selection-end-line="7" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseFacade.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="22" column="35" lean-forward="true" selection-start-line="22" selection-start-column="35" selection-end-line="22" selection-end-column="35" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/ApiBoot.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="20" column="45" lean-forward="false" selection-start-line="20" selection-start-column="45" selection-end-line="20" selection-end-column="45" />
          <folding>
            <element signature="e#30#59#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/BaseRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="104">
          <caret line="14" column="11" lean-forward="false" selection-start-line="14" selection-start-column="11" selection-end-line="14" selection-end-column="11" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/com.typesafe.akka/akka-http_2.12/srcs/akka-http_2.12-10.0.10-sources.jar!/akka/http/scaladsl/server/directives/MethodDirectives.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="32" column="6" lean-forward="false" selection-start-line="32" selection-start-column="6" selection-end-line="32" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="164">
          <caret line="15" column="25" lean-forward="false" selection-start-line="15" selection-start-column="25" selection-end-line="15" selection-end-column="25" />
          <folding>
            <element signature="e#76#102#0" expanded="true" />
            <element signature="e#863#1108#0" expanded="false" />
            <element signature="e#1174#1426#0" expanded="false" />
            <element signature="e#2170#2621#0" expanded="false" />
            <element signature="e#2694#3155#0" expanded="false" />
            <element signature="e#3228#3679#0" expanded="false" />
            <element signature="e#3759#4219#0" expanded="false" />
            <element signature="e#4873#5236#0" expanded="false" />
            <element signature="e#5302#5672#0" expanded="false" />
            <element signature="e#5749#6130#0" expanded="false" />
            <element signature="e#6905#7371#0" expanded="false" />
            <element signature="e#7437#7910#0" expanded="false" />
            <element signature="e#7983#8456#0" expanded="false" />
            <element signature="e#8532#9007#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="677">
          <caret line="94" column="45" lean-forward="false" selection-start-line="94" selection-start-column="45" selection-end-line="94" selection-end-column="45" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#483#778#0" expanded="false" />
            <element signature="e#841#1093#0" expanded="false" />
            <element signature="e#1166#1411#0" expanded="false" />
            <element signature="e#2012#2327#0" expanded="false" />
            <element signature="e#2400#2734#0" expanded="false" />
            <element signature="e#3487#3817#0" expanded="false" />
            <element signature="e#3882#4223#0" expanded="false" />
            <element signature="e#4299#4633#0" expanded="false" />
            <element signature="e#4713#5062#0" expanded="false" />
            <element signature="e#5715#6077#0" expanded="false" />
            <element signature="e#6144#6513#0" expanded="false" />
            <element signature="e#6596#6976#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomExceptions.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="72">
          <caret line="27" column="7" lean-forward="false" selection-start-line="27" selection-start-column="7" selection-end-line="27" selection-end-column="7" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="130">
          <caret line="9" column="0" lean-forward="true" selection-start-line="9" selection-start-column="0" selection-end-line="9" selection-end-column="0" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#531#898#0" expanded="false" />
            <element signature="e#960#1268#0" expanded="false" />
            <element signature="e#1336#1629#0" expanded="false" />
            <element signature="e#1738#2271#0" expanded="false" />
            <element signature="e#2348#2737#0" expanded="false" />
            <element signature="e#2815#3214#0" expanded="false" />
            <element signature="e#3328#3903#0" expanded="false" />
            <element signature="e#3979#4428#0" expanded="false" />
            <element signature="e#4515#4949#0" expanded="false" />
            <element signature="e#5035#5495#0" expanded="false" />
            <element signature="e#5613#6172#0" expanded="false" />
            <element signature="e#6240#6644#0" expanded="false" />
            <element signature="e#6712#7123#0" expanded="false" />
            <element signature="e#7194#7590#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CompanyRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="210">
          <caret line="16" column="80" lean-forward="true" selection-start-line="16" selection-start-column="26" selection-end-line="16" selection-end-column="80" />
          <folding>
            <element signature="e#30#73#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/CountryRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="255">
          <caret line="19" column="22" lean-forward="false" selection-start-line="19" selection-start-column="22" selection-end-line="19" selection-end-column="22" />
          <folding>
            <element signature="e#30#73#0" expanded="true" />
            <element signature="e#675#939#0" expanded="false" />
            <element signature="e#1964#2445#0" expanded="false" />
            <element signature="e#2513#2944#0" expanded="false" />
            <element signature="e#2989#3470#0" expanded="false" />
            <element signature="e#3801#3940#0" expanded="false" />
            <element signature="e#4025#4476#0" expanded="false" />
            <element signature="e#4511#5013#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CompanyApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-886">
          <caret line="50" column="57" lean-forward="false" selection-start-line="50" selection-start-column="57" selection-end-line="50" selection-end-column="57" />
          <folding>
            <element signature="e#76#114#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/CountryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-77">
          <caret line="89" column="0" lean-forward="true" selection-start-line="89" selection-start-column="0" selection-end-line="89" selection-end-column="0" />
          <folding>
            <element signature="e#30#70#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleCategoryApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-482">
          <caret line="62" column="37" lean-forward="false" selection-start-line="62" selection-start-column="37" selection-end-line="62" selection-end-column="37" />
          <folding>
            <element signature="e#30#70#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/core/CustomDirectives.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="223">
          <caret line="48" column="7" lean-forward="false" selection-start-line="48" selection-start-column="7" selection-end-line="48" selection-end-column="7" />
          <folding>
            <element signature="e#73#106#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="223">
          <caret line="105" column="72" lean-forward="true" selection-start-line="105" selection-start-column="37" selection-end-line="105" selection-end-column="72" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#496#827#0" expanded="false" />
            <element signature="e#898#1167#0" expanded="false" />
            <element signature="e#1235#1515#0" expanded="false" />
            <element signature="e#2302#2805#0" expanded="false" />
            <element signature="e#2879#3382#0" expanded="false" />
            <element signature="e#3451#3939#0" expanded="false" />
            <element signature="e#4014#4520#0" expanded="false" />
            <element signature="e#6162#6575#0" expanded="false" />
            <element signature="e#7405#7916#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleTypeRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="270">
          <caret line="20" column="27" lean-forward="true" selection-start-line="20" selection-start-column="27" selection-end-line="20" selection-end-column="27" />
          <folding>
            <element signature="e#76#119#0" expanded="true" />
            <element signature="e#698#994#0" expanded="false" />
            <element signature="e#1051#1382#0" expanded="false" />
            <element signature="e#1431#1726#0" expanded="false" />
            <element signature="e#1790#2123#0" expanded="false" />
            <element signature="e#2182#2532#0" expanded="false" />
            <element signature="e#2577#3100#0" expanded="false" />
            <element signature="e#3173#3628#0" expanded="false" />
            <element signature="e#3706#4178#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/MockRepository.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="239">
          <caret line="40" column="0" lean-forward="true" selection-start-line="40" selection-start-column="0" selection-end-line="40" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleTypeApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="358">
          <caret line="92" column="56" lean-forward="true" selection-start-line="87" selection-start-column="5" selection-end-line="92" selection-end-column="56" />
          <folding>
            <element signature="e#76#116#0" expanded="true" />
            <element signature="e#369#1917#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleCategoryRestTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="14">
          <caret line="5" column="0" lean-forward="true" selection-start-line="5" selection-start-column="0" selection-end-line="15" selection-end-column="30" />
          <folding>
            <element signature="e#76#119#0" expanded="true" />
            <element signature="e#720#1041#0" expanded="false" />
            <element signature="e#1107#1462#0" expanded="false" />
            <element signature="e#2327#2907#0" expanded="false" />
            <element signature="e#2963#3610#0" expanded="false" />
            <element signature="e#3680#4297#0" expanded="false" />
            <element signature="e#4956#5379#0" expanded="false" />
            <element signature="e#5278#5371#0" expanded="false" />
            <element signature="e#5440#6019#0" expanded="false" />
            <element signature="e#6081#6556#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/reactore/feature/VehicleApi.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="70" column="172" lean-forward="false" selection-start-line="70" selection-start-column="172" selection-end-line="70" selection-end-column="172" />
          <folding>
            <element signature="e#30#68#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleRestRestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2445">
          <caret line="165" column="0" lean-forward="false" selection-start-line="165" selection-start-column="0" selection-end-line="165" selection-end-column="0" />
          <folding>
            <element signature="e#76#119#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/reactore/feature/VehicleServiceTestSpec.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="14" column="23" lean-forward="true" selection-start-line="14" selection-start-column="23" selection-end-line="14" selection-end-column="23" />
          <folding>
            <element signature="e#30#56#0" expanded="true" />
            <element signature="e#2230#2827#0" expanded="false" />
            <element signature="e#2898#3493#0" expanded="false" />
            <element signature="e#3569#4160#0" expanded="false" />
            <element signature="e#4233#4835#0" expanded="false" />
            <element signature="e#4913#5515#0" expanded="false" />
            <element signature="e#5596#6208#0" expanded="false" />
            <element signature="e#6737#6986#0" expanded="false" />
            <element signature="e#7068#7324#0" expanded="false" />
            <element signature="e#8210#8822#0" expanded="false" />
            <element signature="e#8911#9528#0" expanded="false" />
            <element signature="e#9595#10212#0" expanded="false" />
            <element signature="e#10284#10901#0" expanded="false" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>